{"ast":null,"code":"var _jsxFileName = \"/Users/cindyangel/Desktop/my-itunes-store21/client/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport BSCard from 'react-bootstrap/Card'; //style with icons\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faLink } from '@fortawesome/free-solid-svg-icons'; //create functional card component and pass props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const [isFav, setFav] = useState(false);\n  const [display, setDisplay] = useState(false);\n  const [click, setClicked] = useState(false);\n  let btnClicked = click ? 'button-clicked' : 'button-not-clicked';\n\n  function addToFavs() {\n    if (sessionStorage.getItem('favList') === null) {\n      const favs = [];\n      sessionStorage.setItem('favList', JSON.stringify(favs));\n    }\n\n    let addFav = JSON.parse(sessionStorage.getItem('favList'));\n    setClicked(true);\n    const newFav = {\n      id: props.id,\n      key: props.key,\n      kind: props.kind,\n      link: props.link,\n      name: props.name,\n      artistName: props.artistName,\n      imgThumbnail: props.imgThumbnail\n    }; //prevent duplicates\n\n    for (let i = 0; i < addFav.length; i++) {\n      if (addFav[i].name === newFav.name) {\n        setFav(!isFav);\n        alert(\"Item already added\");\n        return;\n      }\n    } //push new item into array\n\n\n    addFav.push(newFav);\n    sessionStorage.setItem('favList', JSON.stringify(addFav));\n    alert('Item added successfully');\n    setDisplay(true);\n    window.location.reload();\n  }\n\n  useEffect(() => {\n    // let array = JSON.parse(sessionStorage.getItem('favList'));\n    // for (let i = 0; i < array.length; i++){\n    // sessionStorage.setItem('favList', JSON.stringify(array));\n    // if (sessionStorage.getItem('favList') !== null) {\n    //     setDisplay(true);\n    //     }\n    if (display === true) {\n      for (let i = 0; i < 1; i++) {\n        setDisplay(false);\n      }\n    }\n  }, [isFav, display]);\n  return /*#__PURE__*/_jsxDEV(BSCard, {\n    className: \"display-card-body card-group mb-2 h-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(BSCard.Link, {\n        href: props.link,\n        children: /*#__PURE__*/_jsxDEV(BSCard.Img, {\n          src: props.imgThumbnail,\n          className: \"card-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BSCard.Body, {\n        children: [/*#__PURE__*/_jsxDEV(BSCard.Title, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BSCard.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: props.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BSCard.Subtitle, {\n          className: \"mb-2 card-type\",\n          children: props.kind\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BSCard.Text, {\n          children: props.artistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BSCard.Link, {\n          className: `${btnClicked} card-link`,\n          href: props.link,\n          children: [\"Link to Item\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLink,\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 98\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BSCard.Link, {\n          className: `${btnClicked} card-link`,\n          id: \"addFavbtn\",\n          onClick: () => addToFavs(),\n          children: [\"Favorite\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faHeart,\n            color: \"brown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 119\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"3gJCP6HAXB4bKYMgotLNATZhGIo=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/cindyangel/Desktop/my-itunes-store21/client/src/components/Card.js"],"names":["React","useState","useEffect","BSCard","FontAwesomeIcon","faHeart","faLink","Card","props","isFav","setFav","display","setDisplay","click","setClicked","btnClicked","addToFavs","sessionStorage","getItem","favs","setItem","JSON","stringify","addFav","parse","newFav","id","key","kind","link","name","artistName","imgThumbnail","i","length","alert","push","window","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,OAAR,QAAsB,mCAAtB;AACA,SAAQC,MAAR,QAAqB,mCAArB,C,CAEA;;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,MAAR,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAASC,UAAT,IAAuBX,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACY,KAAD,EAAQC,UAAR,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AAEA,MAAIc,UAAU,GAAGF,KAAK,GAAE,gBAAF,GAAqB,oBAA3C;;AAEA,WAASG,SAAT,GAAqB;AACjB,QAAIC,cAAc,CAACC,OAAf,CAAuB,SAAvB,MAAsC,IAA1C,EAAgD;AAC5C,YAAMC,IAAI,GAAG,EAAb;AACAF,MAAAA,cAAc,CAACG,OAAf,CAAuB,SAAvB,EAAkCC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAlC;AACH;;AACD,QAAII,MAAM,GAAGF,IAAI,CAACG,KAAL,CAAWP,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAX,CAAb;AACAJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMW,MAAM,GAAG;AACXC,MAAAA,EAAE,EAAClB,KAAK,CAACkB,EADE;AAEXC,MAAAA,GAAG,EAACnB,KAAK,CAACmB,GAFC;AAGXC,MAAAA,IAAI,EAACpB,KAAK,CAACoB,IAHA;AAIXC,MAAAA,IAAI,EAACrB,KAAK,CAACqB,IAJA;AAKXC,MAAAA,IAAI,EAACtB,KAAK,CAACsB,IALA;AAMXC,MAAAA,UAAU,EAACvB,KAAK,CAACuB,UANN;AAOXC,MAAAA,YAAY,EAACxB,KAAK,CAACwB;AAPR,KAAf,CARiB,CAkBjB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAEV,MAAM,CAACW,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,UAAIV,MAAM,CAACU,CAAD,CAAN,CAAUH,IAAV,KAAmBL,MAAM,CAACK,IAA9B,EAAoC;AAChCpB,QAAAA,MAAM,CAAC,CAACD,KAAF,CAAN;AACA0B,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACA;AACH;AACJ,KAzBgB,CA0BjB;;;AACAZ,IAAAA,MAAM,CAACa,IAAP,CAAYX,MAAZ;AACAR,IAAAA,cAAc,CAACG,OAAf,CAAuB,SAAvB,EAAkCC,IAAI,CAACC,SAAL,CAAeC,MAAf,CAAlC;AACAY,IAAAA,KAAK,CAAC,yBAAD,CAAL;AACAvB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAyB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AAEDrC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACI;AAEJ;AACA;AACA;AAEA,QAAIS,OAAO,KAAK,IAAhB,EAAsB;AAClB,WAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBrB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ;AAEA,GAfI,EAeF,CAACH,KAAD,EAAQE,OAAR,CAfE,CAAT;AAkBA,sBACI,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,wCAAlB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACA,QAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,IAAI,EAAEH,KAAK,CAACqB,IAAzB;AAAA,+BACI,QAAC,MAAD,CAAQ,GAAR;AAAY,UAAA,GAAG,EAAErB,KAAK,CAACwB,YAAvB;AAAqC,UAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAIA,QAAC,MAAD,CAAQ,IAAR;AAAA,gCACI,QAAC,MAAD,CAAQ,KAAR;AAAA,iCAAc;AAAA,sBAASxB,KAAK,CAACsB;AAAf;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD,CAAQ,QAAR;AAAiB,UAAA,SAAS,EAAC,iBAA3B;AAAA,oBAA8CtB,KAAK,CAACkB;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD,CAAQ,QAAR;AAAiB,UAAA,SAAS,EAAC,gBAA3B;AAAA,oBAA6ClB,KAAK,CAACoB;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,MAAD,CAAQ,IAAR;AAAA,oBAAcpB,KAAK,CAACuB;AAApB;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,SAAS,EAAG,GAAEhB,UAAW,YAAtC;AAAmD,UAAA,IAAI,EAAEP,KAAK,CAACqB,IAA/D;AAAA,kDAAiF,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEvB,MAAvB;AAA+B,YAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,kBAAjF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAOI;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI,QAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,SAAS,EAAG,GAAES,UAAW,YAAtC;AAAmD,UAAA,EAAE,EAAC,WAAtD;AAAkE,UAAA,OAAO,EAAE,MAAMC,SAAS,EAA1F;AAAA,8CAAsG,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEX,OAAvB;AAAgC,YAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAAtG;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAhFQE,I;;KAAAA,I;AAiFT,eAAeA,IAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport BSCard from 'react-bootstrap/Card';\n\n//style with icons\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faHeart} from '@fortawesome/free-solid-svg-icons';\nimport {faLink} from '@fortawesome/free-solid-svg-icons';\n\n//create functional card component and pass props\nfunction Card(props) {\n    const [isFav, setFav] = useState(false);\n    const [display,setDisplay] = useState(false);\n    const [click, setClicked] = useState(false);\n\n    let btnClicked = click? 'button-clicked' : 'button-not-clicked';\n\n    function addToFavs() {\n        if (sessionStorage.getItem('favList') === null) {\n            const favs = [];\n            sessionStorage.setItem('favList', JSON.stringify(favs));   \n        }\n        let addFav = JSON.parse(sessionStorage.getItem('favList'));\n        setClicked(true);\n\n        const newFav = {\n            id:props.id,\n            key:props.key,\n            kind:props.kind,\n            link:props.link,\n            name:props.name,\n            artistName:props.artistName,\n            imgThumbnail:props.imgThumbnail,\n        };\n\n        //prevent duplicates\n        for (let i=0; i <addFav.length; i++) {\n            if (addFav[i].name === newFav.name) {\n                setFav(!isFav);\n                alert(\"Item already added\");\n                return;\n            }\n        }\n        //push new item into array\n        addFav.push(newFav)\n        sessionStorage.setItem('favList', JSON.stringify(addFav));\n        alert('Item added successfully');\n        setDisplay(true);\n        window.location.reload();\n    }\n\n    useEffect(() => {\n        // let array = JSON.parse(sessionStorage.getItem('favList'));\n        // for (let i = 0; i < array.length; i++){\n            // sessionStorage.setItem('favList', JSON.stringify(array));\n\n        // if (sessionStorage.getItem('favList') !== null) {\n        //     setDisplay(true);\n        //     }\n\n        if (display === true) {\n            for (let i = 0; i < 1; i++) {\n                setDisplay(false);\n            }\n        }\n\n        }, [isFav, display]\n    )\n\n    return (\n        <BSCard className='display-card-body card-group mb-2 h-50'>\n            <div className='card'>\n            <BSCard.Link href={props.link}>\n                <BSCard.Img src={props.imgThumbnail} className='card-img'/>\n            </BSCard.Link>\n            <BSCard.Body>\n                <BSCard.Title><strong>{props.name}</strong></BSCard.Title>\n                <BSCard.Subtitle className='mb-2 text-muted'>{props.id}</BSCard.Subtitle>\n                <BSCard.Subtitle className='mb-2 card-type'>{props.kind}</BSCard.Subtitle>\n                <BSCard.Text>{props.artistName}</BSCard.Text>\n                <BSCard.Link className={`${btnClicked} card-link`} href={props.link}>Link to Item<FontAwesomeIcon icon={faLink} color='white' />\n                </BSCard.Link>\n                <br />\n                <BSCard.Link className={`${btnClicked} card-link`} id='addFavbtn' onClick={() => addToFavs()}>Favorite<FontAwesomeIcon icon={faHeart} color='brown'/>\n                </BSCard.Link>\n            </BSCard.Body>\n            </div>\n        </BSCard>\n        \n    )\n}\nexport default Card;"]},"metadata":{},"sourceType":"module"}